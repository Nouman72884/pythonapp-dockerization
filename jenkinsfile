pipeline {
  environment {
    registry = "020046395185.dkr.ecr.us-east-1.amazonaws.com/pythonapp"
    registryCredential = 'AWS'
    dockerImage = ''
  }
  agent any
    stages {
    stage('Cloning Git') {
      steps {
        git  'https://github.com/Nouman72884/pythonapp-dockerization.git'
      }
    }
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":latest"
        }
      }
    }
    stage('Deploy Image') {
      steps{
         script {
            docker.withRegistry("https://" + registry,"ecr:us-east-1:" + registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
    stage('runapp') {
                        steps {
                              sshPublisher(
                              publishers:
                              [sshPublisherDesc
                              (configName: 'webserver',
                               transfers: [sshTransfer(
                               excludes: 'pipelinedsl.groovy',
                               execCommand: 'cd /tmp/tmp;sudo chmod a+x script.sh;./script.sh',
                               execTimeout: 20000,
                               flatten: false,
                               makeEmptyDirs: true,
                               noDefaultExcludes: false,
                               patternSeparator: '[, ]+',
                               remoteDirectory: '/tmp',
                               remoteDirectorySDF: false,
                               removePrefix: '', sourceFiles: '**/*')],
                               usePromotionTimestamp: false,
                               useWorkspaceInPromotion: false,
                               verbose: true)])
                              }
                  }
    }
  }
